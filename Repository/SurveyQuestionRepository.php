<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SurveyQuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SurveyQuestionRepository extends EntityRepository
{
    public function filter($filter, $orderBy, $orderDirection, $active)
    {
        $qb = $this->createQueryBuilder('sq')->join('sq.survey', 's')->join('sq.survey_question_type', 'sqt');

        if (!empty($filter)) {
            $qb
                ->orWhere($qb->expr()->like('sq.id', ':filter'))
                ->orWhere($qb->expr()->like('s.survey_name', ':filter'))
                ->orWhere($qb->expr()->like('sqt.name', ':filter'))
                ->orWhere($qb->expr()->like('sq.prompt', ':filter'))
                ->orWhere($qb->expr()->like('sq.hint', ':filter'))
                ->setParameter('filter', '%' . $filter . '%');
        }

        switch ($active) {
            case ('active'):
                $qb->andWhere('sq.active = true');
                break;
            case ('inactive'):
                $qb->andWhere('sq.active = false');
                break;
        }

        switch (strtolower($orderBy)) {
            case ('survey_name'):
                $qb->orderBy('s.survey_name', $orderDirection);
                break;
            case ('survey_question_type_name'):
                $qb->orderBy('sqt.name', $orderDirection);
                break;
            case ('prompt'):
                $qb->orderBy('sq.prompt', $orderDirection);
                break;
            case ('hint'):
                $qb->orderBy('sq.hint', $orderDirection);
                break;
            default:
                $qb->orderBy('sq.id', $orderDirection);
        }

        return $qb->getQuery();
    }

    /**
     * @return mixed
     */
    public function getCount()
    {
        return $this->createQueryBuilder('sq')
            ->select('count(sq.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }
}
